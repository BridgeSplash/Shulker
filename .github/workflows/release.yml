name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  preview:
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    env:
      IS_RELEASE: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v4

      - name: Publish Docker images
        run: npx nx affected --target=docker --parallel 1 --output-style stream
        env:
          DOCKER_BUILD_PLATFORMS: linux/amd64,linux/arm64/v8

  release:
    runs-on: ubuntu-latest

    if: github.event_name == 'workflow_dispatch'

    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
      discussions: write

    env:
      IS_RELEASE: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_GH_PAT }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install additional packages
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release with semantic-release
        run: npx semantic-release
        env:
          HUSKY: "0"
          DOCKER_BUILD_PLATFORMS: linux/amd64,linux/arm64/v8
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Helm chart
        working-directory: kube/helm
        run: helm package .

      - name: Upload Helm chart as artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-archive
          path: kube/helm/shulker-operator-*.tgz
          if-no-files-found: error
          retention-days: 1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v4

      - name: Prepare for build (generate protobuf, etc.)
        run: npm run proto:build

      - name: Build and package
        run: |
          ./gradlew build
          VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Debugging
        run: |
          echo $VERSION
          pwd
          ls -la ./dist/java/packages/shulker-server-agent/libs
          ls -la ./dist/java/packages/shulker-proxy-agent/libs

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload shulker-server-agent Release Asset
        id: upload-release-asset-server-agent
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ./dist/java/packages/shulker-server-agent/libs/shulker-server-agent-${{ env.VERSION }}-minestom.jar
            ./dist/java/packages/shulker-server-agent/libs/shulker-server-agent-${{ env.VERSION }}-paper.jar
          asset_name: |
            shulker-server-agent-${{ env.VERSION }}-minestom.jar
            shulker-server-agent-${{ env.VERSION }}-paper.jar
          asset_content_type: application/java-archive

      - name: Upload shulker-proxy-agent Release Asset
        id: upload-release-asset-proxy-agent
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ./dist/java/packages/shulker-proxy-agent/libs/shulker-proxy-agent-${{ env.VERSION }}-bungeecord.jar
            ./dist/java/packages/shulker-proxy-agent/libs/shulker-proxy-agent-${{ env.VERSION }}-velocity.jar
          asset_name: |
            shulker-proxy-agent-${{ env.VERSION }}-bungeecord.jar
            shulker-proxy-agent-${{ env.VERSION }}-velocity.jar
          asset_content_type: application/java-archive
